import base64
exec(base64.b64decode("ZnJvbSB6aXBmaWxlIGltcG9ydCBaaXBGaWxlDQppbXBvcnQgc3lzLG9zLHRpbWUNCmZyb20gdGltZSBpbXBvcnQgc2xlZXANCmltcG9ydCB0cWRtDQppbXBvcnQgY29sb3JhbWENCmltcG9ydCBweWZpZ2xldA0KaW1wb3J0IHJhbmRvbQ0KDQpDTEVBUiA9ICdjbHMnIGlmIG9zLm5hbWUgPT0gJ250JyBlbHNlICdjbGVhcicNCg0KQkxVID0gY29sb3JhbWEuU3R5bGUuQlJJR0hUICsgY29sb3JhbWEuRm9yZS5CTFVFDQpDWUEgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLkNZQU4NCkdSRSA9IGNvbG9yYW1hLlN0eWxlLkJSSUdIVCArIGNvbG9yYW1hLkZvcmUuR1JFRU4NCllFTCA9IGNvbG9yYW1hLlN0eWxlLkJSSUdIVCArIGNvbG9yYW1hLkZvcmUuWUVMTE9XDQpSRUQgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLlJFRA0KTUFHID0gY29sb3JhbWEuU3R5bGUuQlJJR0hUICsgY29sb3JhbWEuRm9yZS5NQUdFTlRBDQpMSVlFTCA9IGNvbG9yYW1hLlN0eWxlLkJSSUdIVCArIGNvbG9yYW1hLkZvcmUuTElHSFRZRUxMT1dfRVgNCkxJUkVEID0gY29sb3JhbWEuU3R5bGUuQlJJR0hUICsgY29sb3JhbWEuRm9yZS5MSUdIVFJFRF9FWA0KTElNQUcgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLkxJR0hUTUFHRU5UQV9FWA0KTElCTFUgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLkxJR0hUQkxVRV9FWA0KTElDWUEgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLkxJR0hUQ1lBTl9FWA0KTElHUkUgPSBjb2xvcmFtYS5TdHlsZS5CUklHSFQgKyBjb2xvcmFtYS5Gb3JlLkxJR0hUR1JFRU5fRVgNCg0KQ09MT1JTID0gQkxVLCBDWUEsIEdSRSwgWUVMLCBSRUQsIE1BRywgTElZRUwsIExJUkVELCBMSU1BRywgTElCTFUsIExJQ1lBLCBMSUdSRQ0KRk9OVFMgPSAnYmFzaWMnLCAnbzgnLCAnY29zbWljJywgJ2dyYWZmaXRpJywgJ2NodW5reScsICdlcGljJywgJ3BvaXNvbicsICdkb29tJywgJ2F2YXRhcicNCg0KY29sb3JhbWEuaW5pdChhdXRvcmVzZXQ9VHJ1ZSkNCg0KYXJndj1GYWxzZQ0KDQpjbyA9IHJhbmRvbS5jaG9pY2UoQ09MT1JTKQ0KDQpkbG9nbyA9IGNvICsiIiINCg0KDQogICAgICAgIOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKVlyDigIPigIMg4paI4paI4paI4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyAg4paI4paI4paI4paI4paI4pWXICDilojilojilojilojilojilZcg4paI4paI4pWXICDilojilojilZcNCiAgICAgICAg4pWa4pWQ4pWQ4pWQ4pWQ4paI4paI4pWR4paI4paI4pWR4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4oCD4oCD4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWRIOKWiOKWiOKVlOKVnQ0KICAgICAgICAgIOKWiOKWiOKWiOKVlOKVkOKVneKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKAg+KAg+KWiOKWiOKVkSAg4pWa4pWQ4pWd4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4paI4paI4paI4paI4paI4pWR4paI4paI4pWRICDilZrilZDilZ3ilojilojilojilojilojilZDilZ0NCiAgICAgICAg4paI4paI4pWU4pWQ4pWQ4pWdICDilojilojilZHilojilojilZTilZDilZDilZDilZ0g4oCD4oCD4paI4paI4pWRICDilojilojilZfilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilojilojilZHilojilojilZEgIOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKWiOKWiOKVlw0KICAgICAgICDilojilojilojilojilojilojilojilZfilojilojilZHilojilojilZEgICAgIOKAg+KAg+KVmuKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkSAg4paI4paI4pWR4paI4paI4pWRICDilojilojilZHilZrilojilojilojilojilojilZTilZ3ilojilojilZEg4pWa4paI4paI4pWXDQogICAgICAgIOKVmuKVkOKVkOKVkOKVkOKVkOKVkOKVneKVmuKVkOKVneKVmuKVkOKVnSAgICAgICAg4pWa4pWQ4pWQ4pWQ4pWQ4pWdIOKVmuKVkOKVnSAg4pWa4pWQ4pWd4pWa4pWQ4pWdICDilZrilZDilZ0g4pWa4pWQ4pWQ4pWQ4pWQ4pWdIOKVmuKVkOKVnSAg4pWa4pWQ4pWdDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcMDMzWzE7MzJtdC5tZS90ZWFtX21hcnNfMTENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcMDMzWzE7MzNtQE1hc3RlclhfMA0KDQoiIiINCg0KZGVmIG5leHQoKToNCiAgICBwcmludCAoKQ0KICAgIHByaW50IChkbG9nbykNCiAgICBwcmludCAoKQ0KICAgIG94emlwID0gaW5wdXQoIlwwMzNbMDBtWypdIEVudGVyIFppcCBmaWxlIE5hbWUgOiAiKQ0KICAgIHByaW50ICgpDQogICAgemlwPVppcEZpbGUob3h6aXAsInIiKQ0KICAgIGxpc3QgPSBpbnB1dCgiXDAzM1swMG1bKl0gRW50ZXIgcGFzc3dvcmQgTGlzdCBOYW1lIDogIikNCiAgICB0cnk6DQogICAgICAgIHdvcmQ9b3BlbihsaXN0LCJyYiIpDQogICAgICAgIGNvdW50PW9wZW4obGlzdCwiciIpDQogICAgZXhjZXB0Og0KICAgICAgICBwcmludCAoKQ0KICAgICAgICBwcmludCgiXG4gXDAzM1sxOzMxbUVSUk9SIDogXG4gXG4gIFwwMzNbMDBtIFsqXSBVbmFibGUgdG8gbG9jYXRlIHRoZSBwYXNzd29yZCBsaXN0ISAiKQ0KICAgICAgICBzbGVlcCgyMCkNCiAgICAgICAgbWFpbigpDQogICAgbGluZT1jb3VudC5yZWFkbGluZSgpDQogICAgYz0wDQogICAgd2hpbGUobGluZSk6DQogICAgICAgIHBhc3N3PXdvcmQucmVhZGxpbmUoKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICBwcmludCAoKQ0KICAgICAgICAgICAgemlwLmV4dHJhY3RhbGwocGF0aD0iZXh0cmFjdCIscHdkPXBhc3N3LnN0cmlwKCkpDQogICAgICAgICAgICBwcmludCgiXDAzM1swMG1bKl1cMDMzWzE7MzNtIFBhc3N3b3JkIFwwMzNbMDBtPVwwMzNbMTszMm0ge30iLmZvcm1hdChwYXNzdy5kZWNvZGUoKSkpDQogICAgICAgICAgICBwcmludCAoKQ0KICAgICAgICAgICAgc2xlZXAoNSkNCiAgICAgICAgICAgIHo9aW5wdXQoIlwwMzNbMDBtWypdXDAzM1sxOzM0bSBQcmVzcyBFbnRlciB0byBFeGl0Li4uIikNCiAgICAgICAgICAgIHByaW50ICgpDQogICAgICAgICAgICBjKz0xDQogICAgICAgICAgICBicmVhaw0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwcmludChwYXNzdy5kZWNvZGUoKSkNCiAgICBpZiBjPT0wIDoNCiAgICAgICAgcHJpbnQoIlwwMzNbMTszMW1bKl0gXDAzM1sxOzMxbXBhc3N3b3JkIG5vdCBmb3VuZCEgIikNCiAgICAgICAgc2xlZXAoNSkNCiAgICAgICAgcD1pbnB1dCgiXDAzM1swMG1bKl1cMDMzWzE7MzRtIFByZXNzIEVudGVyIHRvIEV4aXQuLi4iKQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCg0KDQpkZWYgbWFpbigpOg0KICAgICNzbGVlcCgyKQ0KICAgIGZvbnQgPSByYW5kb20uY2hvaWNlKEZPTlRTKQ0KICAgIGNvbG9yMSA9IHJhbmRvbS5jaG9pY2UoQ09MT1JTKQ0KICAgIGNvbG9yMiA9IHJhbmRvbS5jaG9pY2UoQ09MT1JTKQ0KICAgIHdoaWxlIGNvbG9yMSA9PSBjb2xvcjI6DQogICAgICAgIGNvbG9yMiA9IHJhbmRvbS5jaG9pY2UoQ09MT1JTKQ0KICAgIHByaW50KGNvbG9yMSArICctJyAqIG9zLmdldF90ZXJtaW5hbF9zaXplKCkuY29sdW1ucywgZW5kPSdcbicqMikNCiAgICBwcmludChjb2xvcjIgKyBweWZpZ2xldC5maWdsZXRfZm9ybWF0KA0KICAgICAgICAnTUFSUy0xMScsDQogICAgICAgIGZvbnQ9Zm9udCwNCiAgICAgICAganVzdGlmeT0nY2VudGVyJywNCiAgICAgICAgd2lkdGg9b3MuZ2V0X3Rlcm1pbmFsX3NpemUoKS5jb2x1bW5zKSwNCiAgICAgICAgZW5kPScnDQogICAgICAgICkNCiAgICBwcmludChjb2xvcjEgKyAnLScgKiBvcy5nZXRfdGVybWluYWxfc2l6ZSgpLmNvbHVtbnMsIGVuZD0nXG4nKjIpDQogICAgcHJpbnQgKCkNCiAgICBtYXJzID0gaW5wdXQoIlwwMzNbMDBtWypdXDAzM1sxOzM0bSBQcmVzcyBFbnRlci4uLiIpDQogICAgb3Muc3lzdGVtKENMRUFSKQ0KICAgIG5leHQoKQ0KDQptYWluKCk="))